{% extends 'base.html.twig' %}

{% block title %}Détails{% endblock %}

{% block nav_avatar %}
    {% if membre_avatarFilename %}
        <img class="rounded-full w-[38px] aspect-square" src="{{ asset('img/avatars/' ~ membre_avatarFilename) }}" id="img" alt="Image de profil personnalisee">
    {% else %}
        <div class="text-cuiGrayDark bg-cuiOrange hover:bg-cuiOrange/90 font-medium rounded-full text-sm px-2.5 py-[10px] text-center cursor-pointer">
            <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 18">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 8a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7Zm-2 3h4a4 4 0 0 1 4 4v2H1v-2a4 4 0 0 1 4-4Z"/>
            </svg>
        </div>
    {% endif %}
{% endblock %}

{% block body %}
    <div id="content" class="flex flex-col w-5/6 h-full text-white md:text-2xl lg:text-3xl justify-between gap-12 text-base">
        <section id="top"  class="flex flex-row w-fit lg:justify-between lg:w-full mt-10">
            <a id="retour" type="button" href="{{ path('app_home') }}" class="text-cuiBlack bg-cuiGrayLight h-full font-medium rounded-lg text-sm p-2.5 inline-flex items-center hover:bg-cuiOrange lg:w-20 lg:h-20">
                <svg class="w-6 h-6 text-cuiBlack dark:text-white lg:w-16 lg:h-12" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 8 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 1 1.3 6.326a.91.91 0 0 0 0 1.348L7 13"/>
                </svg>
            </a>
            <img loading="lazy" class="grow w-1/2 lg:max-w-screen-lg" src="{{ asset('img/recettes/' ~ recipe.id ~ '.png') }}" alt="foodImg">
            {% if is_granted('IS_AUTHENTICATED') %}
                <a id="fav" onclick="document.location.href='{{ path('app_details_fav_update', {'fav': recipe.fav, 'idRecipe': recipe.id, 'note': recipe.noteRecette }) }}'" class="text-cuiBlack bg-cuiGrayLight h-full font-medium rounded-lg text-sm p-2.5 inline-flex items-center hover:bg-cuiOrange lg:w-20 lg:h-20">
                    {% if recipe.fav %}
                        <svg id="hearth" class="w-6 h-6 text-cuiBlack dark:text-white lg:w-16 lg:h-12" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="red" viewBox="0 0 21 19">
                            <path id="outline" stroke="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 4C5.5-1.5-1.5 5.5 4 11l7 7 7-7c5.458-5.458-1.542-12.458-7-7Z"/>
                        </svg>
                    {% else %}
                        <svg id="hearth" class="w-6 h-6 text-cuiBlack dark:text-white lg:w-16 lg:h-12" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 21 19">
                            <path id="outline" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 4C5.5-1.5-1.5 5.5 4 11l7 7 7-7c5.458-5.458-1.542-12.458-7-7Z"/>
                        </svg>
                    {% endif %}
                </a>
                <script>
                    let buttonFav = document.querySelector('#fav');

                    buttonFav.addEventListener("click", function () {
                        let hearth = buttonFav.querySelector('#hearth');
                        let hearthOutline = buttonFav.querySelector('#outline');

                        const isFav = hearth.getAttribute('fill') === 'red';

                        if (!isFav) {
                            hearth.setAttribute('fill', 'red');
                            hearthOutline.setAttribute('stroke', 'none');
                        } else {
                            hearth.setAttribute('fill', 'none');
                            hearthOutline.setAttribute('stroke', 'currentColor');
                        }
                    });
                </script>
            {% else %}
                <button onclick="alert('Vous devez être membre pour mettre en favoris')" class="text-cuiBlack bg-cuiGrayLight h-full font-medium rounded-lg text-sm p-2.5 inline-flex items-center hover:bg-cuiOrange lg:w-20 lg:h-20">
                    <svg class="w-6 h-6 text-cuiBlack dark:text-white lg:w-16 lg:h-12" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 21 19">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 4C5.5-1.5-1.5 5.5 4 11l7 7 7-7c5.458-5.458-1.542-12.458-7-7Z"/>
                    </svg>
                </button>
            {% endif %}
        </section>
        <section id="details" class="flex flex-col items-center bg-cuiGray rounded-lg gap-8 pt-10 pb-10">
            <p class="text-3xl pl-2 pr-2 text-center md:text-5xl lg:pl-5 lg:pr-5">{{ recipe.nomRecette | capitalize }}</p>
            <p class="text-xl pl-2 pr-2 md:text-3xl lg:pl-5 lg:pr-5">{{ recipe.description | capitalize }}</p>
            <section id="characteristics" class="flex flex-row w-[calc(80%-2rem)] justify-around">
                <div class="flex flex-col items-center mr-2">
                    <svg class="w-6 h-6 text-cuiOrange dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M10 0a10 10 0 1 0 10 10A10.011 10.011 0 0 0 10 0Zm3.982 13.982a1 1 0 0 1-1.414 0l-3.274-3.274A1.012 1.012 0 0 1 9 10V6a1 1 0 0 1 2 0v3.586l2.982 2.982a1 1 0 0 1 0 1.414Z"/>
                    </svg>
                    <span class="text-white">{{ recipe.tempsRecette|date('%i') }} minutes</span>
                    <p class="text-cuiGrayLight mt-2">Préparation</p>
                </div>
                <div class="flex flex-col items-center ml-2 mr-2">
                    {% if is_granted('IS_AUTHENTICATED') %}
                        {{ include('details/_note.html.twig', {note: recipe.noteRecette}) }}
                    {% else %}
                        <svg class="w-6 h-6 text-cuiOrange dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 22 20">
                            <path d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z"/>
                        </svg>
                        <p id="note">{{ recipe.noteMoyenne }}</p>
                        <p class="text-cuiGrayLight mt-2">Notation</p>
                    {% endif %}
                </div>
                <div class="flex flex-col items-center ml-2">
                    <svg class="w-6 h-6 text-cuiOrange dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 17 20">
                        <path d="M7.958 19.393a7.7 7.7 0 0 1-6.715-3.439c-2.868-4.832 0-9.376.944-10.654l.091-.122a3.286 3.286 0 0 0 .765-3.288A1 1 0 0 1 4.6.8c.133.1.313.212.525.347A10.451 10.451 0 0 1 10.6 9.3c.5-1.06.772-2.213.8-3.385a1 1 0 0 1 1.592-.758c1.636 1.205 4.638 6.081 2.019 10.441a8.177 8.177 0 0 1-7.053 3.795Z"/>
                    </svg>
                    {% if recipe.diffRecette == 1 %}
                        <p id="diff">Facile</p>
                    {% elseif recipe.diffRecette == 2%}
                        <p id="diff">Moyen</p>
                    {% else %}
                        <p id="diff">Difficile</p>
                    {% endif %}
                    <p class="text-cuiGrayLight mt-2">Difficulté</p>
                </div>
            </section>
            <section id="buttons" class="flex flex-col items-center gap-5 w-full md:flex-row md:justify-center">
                <section id="selector_toggle" class="flex flex-row bg-cuiBlack h-15 rounded-full p-1 md:ml-36 lg:w-1/3 lg:h-20 ">
                    <button id="button_reci" type="button" class="bg-cuiGray text-cuiOrange text-lg lg:text-2xl text-center w-1/2 py-2.5 px-5 font-medium rounded-full">
                        Recette
                    </button>
                    <button id="button_comp" type="button" class="bg-cuiBlack text-cuiGray text-lg lg:text-2xl text-center w-1/2 hover:bg-cuiGray hover:text-cuiOrange py-2.5 px-5 font-medium rounded-full">
                        Ingredients
                    </button>
                </section>
                <button id="sharing_button" onclick="clipboard(location.href)" type="button" class="inline-flex items-center font-medium bg-cuiBlack hover:bg-cuiOrange hover:text-cuiBlack text-cuiOrange h-15 w-fit text-2xl py-2.5 px-5 rounded-full lg:h-20">
                    <svg class="w-3.5 h-3.5 me-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 21">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m5.953 7.467 6.094-2.612m.096 8.114L5.857 9.676m.305-1.192a2.581 2.581 0 1 1-5.162 0 2.581 2.581 0 0 1 5.162 0ZM17 3.84a2.581 2.581 0 1 1-5.162 0 2.581 2.581 0 0 1 5.162 0Zm0 10.322a2.581 2.581 0 1 1-5.162 0 2.581 2.581 0 0 1 5.162 0Z"/>
                    </svg>
                    Partager
                </button>
            </section>
            <section id="instruction" class="flex flex-col gap-2 lg:gap-5 ml-2 mr-2 lg:ml-5 lg:mr-5"> {# liste des etapes de la recette #}
                {% set instructions = recipe.instruction |split('\n') %}
                {% for elmt in instructions %}
                <p>{{ elmt }}</p>
                {% endfor %}
            </section>
            <section id="components" class="hidden"> {# liste des Ingredients (remplacer grid par hidden pour la balance)#}
                <div class="flex mb-5 space-x-2 bg-cuiBlack rounded-lg w-fit p-2">
                    <button id="minus_pers" onclick="changeQte(this)">
                        <svg class="w-6 h-6 text-white dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 2">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h16"/>
                        </svg>
                    </button>
                    <div class="flex">Pour <div id="nb_pers" class="px-2"> {{ recipe.nbPers }} </div> personnes</div>
                    <button id="plus_pers" onclick="changeQte(this)">
                        <svg class="w-6 h-6 text-white dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 18">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 1v16M1 9h16"/>
                        </svg>
                    </button>
                </div>
                <div class="grid grid-cols-3 md:grid-cols-5 gap-4">
                {% for elmt in components %}

                    <div class="flex flex-col items-center bg-cuiBlack rounded-lg 2xl:w-60">
                        <div class="grow">
                            <img loading="lazy" class="lg:h-60 lg:w-60 rounded-lg" src="{{ asset('img/ingredients/' ~ elmt.id ~ '.png') }}" alt="">
                        </div>
                        <div class="flex flex-col gap-2 items-center text-center">
                            {{ elmt.nomIngr | capitalize }}
                            <span id="dose" class="font-bold flex"><object id="val" name='{{ elmt.qte }}' hidden></object><div id="quantity" class="pr-2">{{ elmt.qte }}</div><div id="unite">{{ elmt.nomUnit }}</div></span>
                        </div>
                    </div>
                {% endfor %}
                </div>
            </section>
        </section>
    </div>

    <script>
        let buttonRecipe = document.querySelector('#button_reci');
        let buttonComponents = document.querySelector('#button_comp');
        let ShareButton = document.querySelector('#sharing_button');
        let buttonPlus = document.querySelector('#plus_pers');
        let buttonMinus = document.querySelector('#minus_pers');

        let displayRecipe = document.querySelector('#instruction');
        let displayComponents = document.querySelector('#components');
        let displayNpPers = document.querySelector('#nb_pers');


        buttonRecipe.addEventListener('click', () => {
            buttonRecipe.className = "bg-cuiGray text-cuiOrange text-lg lg:text-2xl text-center w-1/2 py-2.5 px-5 font-medium rounded-full";
            buttonComponents.className = "bg-cuiBlack text-cuiGray text-lg lg:text-2xl text-center w-1/2 hover:bg-cuiGray hover:text-cuiOrange py-2.5 px-5 font-medium rounded-full";
            displayRecipe.className = "flex flex-col gap-2 lg:gap-5 ml-2 mr-2 lg:ml-5 lg:mr-5";
            displayComponents.className = "hidden";

        });

        buttonComponents.addEventListener('click', () => {
            buttonComponents.className = "bg-cuiGray text-cuiOrange text-lg lg:text-2xl text-center w-1/2 py-2.5 px-5 font-medium rounded-full";
            buttonRecipe.className = "bg-cuiBlack text-cuiGray text-lg lg:text-2xl text-center w-1/2 hover:bg-cuiGray hover:text-cuiOrange py-2.5 px-5 font-medium rounded-full";
            displayRecipe.className = "hidden";
            displayComponents.className = "";
        })

        function clipboard(text) {
            navigator.clipboard.writeText(text);
            ShareButton.innerHTML = 'Copié !';
            ShareButton.className = "inline-flex items-center font-medium bg-cuiBlack hover:bg-cuiOrange hover:text-cuiBlack text-cuiOrange h-15 w-fit text-2xl py-2.5 px-5 rounded-full lg:h-20";
        }
        function round(value, step) {
            step || (step = 1.0);
            var inv = 1.0 / step;
            return Math.round(value * inv) / inv;
        }

        function changeQte(button){
            let oldValue = parseInt(displayNpPers.innerHTML);
            let newValue = parseInt(displayNpPers.innerHTML);
            if (button==buttonPlus & parseInt(displayNpPers.innerHTML)<50){

            displayNpPers.innerHTML=parseInt(displayNpPers.innerHTML)+1;
                   newValue = parseInt(displayNpPers.innerHTML);
            }
            if (button==buttonMinus & parseInt(displayNpPers.innerHTML)>1){
                displayNpPers.innerHTML=parseInt(displayNpPers.innerHTML)-1;
                 newValue = parseInt(displayNpPers.innerHTML);
            }


            var doses = document.querySelectorAll('#dose');
            doses.forEach(function(dose)
            {
                let unites = ['c. à café','c. à soupe','pincée','poignée','verre','tasse']
                let quantity = dose.querySelector('#quantity');
                let unite = dose.querySelector('#unite');
                let val = dose.querySelector('#val');
                let val_qte = parseFloat(val.name) / oldValue *newValue;

                if(unites.includes(unite.innerHTML)) {

                   val.name = val_qte
                    quantity.innerHTML =  round(val_qte,1);

                }
                else{
                    val.name = val_qte
                    quantity.innerHTML =  round(val_qte,0.5);
                }
            });
        }

    </script>
{% endblock %}
